/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package crud.java;

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;


public class DbMetadata {

    private Connection con;
    private String catalog;
    private List<String> dbTables;

    protected List<String> getTables() {
        return dbTables;
    }

    DbMetadata(Connection con, String catalog) {
        this.con = con;
        this.catalog = catalog;
        this.loadDbTables();
    }

    private List<String> loadDbTables() {
        this.dbTables = new ArrayList<String>();
        try {
            // Aborts if connection is closed
            if (this.con.isClosed()) {
                return null;
            }
            // Gets an array of strings, where each string is the name of a database table
            DatabaseMetaData dbMeta = this.con.getMetaData();

            String schemaPattern = null;
            String tableNamePattern = null;
            String[] types = { "TABLE" };

            ResultSet dbTablesSet = dbMeta.getTables(this.catalog, schemaPattern, tableNamePattern, types);

            this.dbTables = this.resultSetToList(dbTablesSet, "TABLE_NAME");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

        return this.dbTables;
    }

    protected List<String> getTableColsMetadata(String tableName, String metadataType) {
        List<String> tableColsMetadata = new ArrayList<String>();
        try {
            ResultSet tableColsSet = this.getTableColsSet(tableName);
            tableColsMetadata = this.resultSetToList(tableColsSet, metadataType);
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

        return tableColsMetadata;
    }

    // util

    private ResultSet getTableColsSet(String tableName) throws SQLException{
        ResultSet tableColsSet = null;

        DatabaseMetaData dbMeta = this.con.getMetaData();

        String schemaPattern = null;
        String columnNamePattern = null;

        tableColsSet = dbMeta.getColumns(this.catalog, schemaPattern, tableName, columnNamePattern);

        return tableColsSet;
    }

    private List<String> resultSetToList(ResultSet resultSet, String metadataType) throws SQLException {
        ArrayList<String> resultList = new ArrayList<String>();
        resultSet.beforeFirst();
        while (resultSet.next()) {
            resultList.add(resultSet.getString(metadataType));
        }

        return resultList;
    }
}
